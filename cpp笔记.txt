1. 局部变量和全局变量同名，局部变量可以屏蔽全局变量，作用域运算符::用来解决这种问题
2. 命名空间
    2.1 只能定义全局的命名空间
    2.2 命名空间定义可以嵌套
    2.3 命名空间是开放的，可以在多个地方定义相同的namespace,在不同地方定义可以，但是不可以重复定义相同的对象
    2.4 声明和实现分离
    2.5 匿名空间，匿名空间只能在本文件内访问，相当于给这个标识符加上了static属性， 注意不能在定义相同名称的全局变量
    2.6 命名空间别名 namespace shortName = veryLongName;
3. using
    3.1 using编译指令  using namespace std;   std命名空间下所有的标志符号都可以使用
    3.2 声明变量，using std::cout 只能使用std命名空间下的cout标识符号
    3.3 using编译指令只在当前文件中有效

4. 全局变量检测相比C检测增强
    4.1 C语言全局变量声明同时定义
        int a = 10;
        int a;
        此代码在c++下编译失败,在c下编译通过.
    4.2 C语言中没有写类型可以是任意类型
        4.2.1 int func(i){return i;}   调用的时候可以传入任意类型
        4.2.2 int func(){}             没有写参数，可以传入任意类型的参数
        此代码在c++下编译失败,在c下编译通过.
    4.3 
    	在C语言中，int fun() 表示返回值为int，接受任意参数的函数，int fun(void) 表示返回值为int的无参函数。
    	在C++ 中，int fun() 和int fun(void) 具有相同的意义，都表示返回值为int的无参函数

5. struct类型加强
    5.1 C中定义结构体变量，需要加上struct关键字，C++不需要
    5.2 C中的结构体只能定义成员变量，C++既可以定义成员变量，也可以定义成员函数

6. 新增bool类型关键字, 占用一个字节， true转为整数1， false转为整数0， 给bool类型赋值时，不为0的数都会自动转为1
   C语言中其实也有bool类型，只不过在C99标准中才有，需要包含头文件stdbool.h，既可以使用和C++一样的bool类型了

7. 三目运算符功能增强
    7.1 C语言中三目运算符结果只能作为右值，C++中可以作为左值
    int a = 10; int b = 20;
    int c = a > b ? a : b;

    7.2 C++中
    int a = 10; int b = 20;
    a > b ? a : b = 200;        //三目运算符作为左值，表示变量的引用，这里相当于

8. C/C++ const
    8.1 const类型的全局变量，C和C++中特性是一致的，不能通过任何方式（指针索引）修改敞亮的值,否则会coredump
        C/C++中全局const会被存储到只读数据段
    8.2 C语言局部const，储存在堆栈区，只是不能通过变量直接修改值，但可以通过指针修改
    8.3 C++中局部的const，const int a = 10，这种，编译器会把他放到符号表中，当我们对a取地址时，为a分配内存
        int *p = &a; 通过修改p的值无法修改a的值， 因为a是在符号表中，无法修改

        如果int b; const int a = b; 使用变量初始化常量，那么可以通过指针修改该常量的值
    8.4 尽量以const代替#define

9. 引用
    9.1 引用必须在声明变量时进行初始化
    9.2 引用初始化后，不能修改，不可以一会是a的引用，一会又是b的引用
        9.2.1 int a = 10; int &b = a;  b = c;
    9.3 可以建立数组的引用 变量类型 &引用名 = 引用变量
        













